// Generated by CoffeeScript 1.8.0
(function() {
  module.exports = function(grunt) {
    var fs, name, pkg;
    fs = require('fs');
    pkg = require('./package.json');
    grunt.initConfig({
      pkg: pkg,
      coffeelint: {
        options: {
          arrow_spacing: {
            level: 'error'
          },
          line_endings: {
            level: 'error',
            value: 'unix'
          },
          max_line_length: {
            level: 'error',
            value: 150
          },
          no_unnecessary_fat_arrows: {
            level: "ignore"
          }
        },
        source: ['octokit.coffee'],
        grunt: 'Gruntfile.coffee'
      },
      clean: {
        files: {
          src: ['octokit.js', 'octokit.js.map'],
          filter: 'isFile'
        }
      },
      coffee: {
        compile: {
          options: {
            sourceMap: false
          },
          files: {
            'octokit.js': ['octokit.coffee']
          }
        }
      },
      bump: {
        options: {
          commit: true,
          push: true,
          pushTo: '',
          commitFiles: ['package.json', 'component.json', 'bower.json', 'octokit.js'],
          files: ['package.json', 'bower.json', 'component.json']
        }
      },
      mochaTest: {
        test: {
          options: {
            reporter: 'spec',
            require: 'coffee-script'
          },
          src: ['test/**/node*.coffee']
        }
      },
      mochacov: {
        options: {
          coverage: true,
          reporter: 'spec',
          require: ['coffee-script'],
          compilers: ['coffee:coffee-script']
        },
        all: ['test/**/node*.coffee']
      },
      blanket_mocha: {
        all: ['test/index.html'],
        options: {
          threshold: 54,
          log: true,
          reporter: 'Dot'
        }
      },
      watch: {
        files: 'octokit.coffee',
        tasks: ['default']
      }
    });
    for (name in pkg.dependencies) {
      if (name.substring(0, 6) === 'grunt-') {
        grunt.loadNpmTasks(name);
      }
    }
    for (name in pkg.devDependencies) {
      if (name.substring(0, 6) === 'grunt-') {
        if (grunt.file.exists("./node_modules/" + name)) {
          grunt.loadNpmTasks(name);
        }
      }
    }
    grunt.registerTask('test', ['coffeelint', 'clean', 'coffee', 'mochaTest']);
    grunt.registerTask('release', ['clean', 'coffeelint', 'coffee', 'mochaTest', 'bump']);
    grunt.registerTask('release-minor', ['clean', 'coffeelint', 'coffee', 'mochaTest', 'bump:minor']);
    return grunt.registerTask('default', ['coffeelint', 'clean', 'coffee']);
  };

}).call(this);
