// Generated by CoffeeScript 1.7.1
(function() {
  'use strict';
  var MeltController;

  window.MeltApp = angular.module('MeltApp', ['ui.utils']);

  MeltController = function($scope, $http, $sce) {
    window.scope = $scope;
    $scope.results = [];
    $scope.ready_to_select = -1;
    $scope.timeout = null;
    $scope.selected = null;
    $http({
      method: "GET",
      url: "/songs.json"
    }).success(function(data) {
      return $scope.data = data;
    });
    $scope.query_change = function() {
      if ($scope.query.length < 3) {
        $scope.results = [];
        return;
      }
      return $scope.update_results();
    };
    $scope.update_results = function() {
      var res, words;
      document.getElementById('search-list').scrollTop = 0;
      $scope.ready_to_select = -1;
      words = $scope.query.split(' ');
      window.filterf = function(datum) {
        var word, _i, _len;
        for (_i = 0, _len = words.length; _i < _len; _i++) {
          word = words[_i];
          if (datum.name.toLowerCase().indexOf(word.toLowerCase()) < 0) {
            return false;
          }
        }
        return true;
      };
      res = _.filter($scope.data, filterf);
      $scope.results = res;
    };
    $scope.query_key = function($event) {
      var can_down, can_select, can_up, has_items, key, not_over, selected;
      $event.preventDefault();
      can_up = $scope.ready_to_select > 0;
      can_down = $scope.ready_to_select < $scope.results.length - 1;
      not_over = $scope.ready_to_select < $scope.results.length;
      has_items = $scope.results.length > 0;
      can_select = $scope.ready_to_select > -1 && not_over && has_items;
      if ($event.keyCode === 40) {
        key = "Down";
      } else if ($event.keyCode === 38) {
        key = "Up";
      } else if ($event.keyCode === 13) {
        key = "Enter";
      } else {
        $scope.ready_to_select = -1;
        $scope.query = "";
        $scope.results = [];
        document.getElementById('search-list').scrollTop = 0;
        return;
      }
      if (key === "Down") {
        if (can_down) {
          $scope.ready_to_select += 1;
          if ($scope.ready_to_select > 3) {
            return document.getElementById('search-list').scrollTop += 20;
          }
        } else {
          $scope.ready_to_select = 0;
          return document.getElementById('search-list').scrollTop = 0;
        }
      } else if (key === "Up") {
        if (can_up) {
          $scope.ready_to_select -= 1;
          if ($scope.ready_to_select < $scope.results.length - 5) {
            return document.getElementById('search-list').scrollTop -= 20;
          }
        } else {
          $scope.ready_to_select = $scope.results.length - 1;
          return document.getElementById('search-list').scrollTop = 9999999;
        }
      } else if (key === "Enter" && can_select) {
        selected = $scope.results[$scope.ready_to_select];
        $scope.select(selected);
        return $scope.ready_to_select = -1;
      } else {
        return $scope.ready_to_select = -1;
      }
    };
    $scope.mouseover = function(idx) {
      return $scope.ready_to_select = idx;
    };
    $scope.mouseleave = function(idx) {
      return $scope.ready_to_select = -1;
    };
    return $scope.select = function(datum) {
      var _setColumnWidth;
      $scope.query = "";
      $scope.results = [];
      $scope.selected = datum;
      $http({
        method: "GET",
        url: datum.file
      }).success(function(data) {
        var error, metal;
        if (data.indexOf('---') > -1) {
          $scope.song_meta = '---\n' + data.split('---')[1];
          $scope.song_data = data.split('---')[2];
          try {
            metal = jsyaml.load($scope.song_meta);
            $scope.tube_id = metal.tube_id;
            if ($scope.tube_id) {
              $scope.tube_url = $sce.trustAsResourceUrl("http://www.youtube.com/embed/" + $scope.tube_id);
            }
          } catch (_error) {
            error = _error;
            console.log(error);
          }
        } else {
          $scope.song_meta = null;
          $scope.song_data = data;
        }
        _setColumnWidth(Math.round(_.max(scope.song_data.split("\n")).length * .69));
        document.getElementById('song-meta').innerHTML = $scope.song_meta;
        return document.getElementById('pre-song').innerHTML = $scope.song_data;
      });
      return _setColumnWidth = function(column_width) {
        var el, els, w, _i, _len, _results;
        els = document.querySelectorAll(".song");
        w = column_width + "em";
        _results = [];
        for (_i = 0, _len = els.length; _i < _len; _i++) {
          el = els[_i];
          el.style["-webkit-column-width"] = w;
          el.style["-moz-column-width"] = w;
          _results.push(el.style["column-width"] = w);
        }
        return _results;
      };
    };
  };

  MeltController.$inject = ['$scope', '$http', '$sce'];

  angular.module('MeltApp').controller('MeltController', MeltController);

}).call(this);
